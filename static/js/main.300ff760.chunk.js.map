{"version":3,"sources":["components/coinPage/Styles.js","redux/reducers/coinReducers.js","redux/reducers/walletReducer.js","redux/reducers/index.js","redux/types.js","redux/reducers/isLoggedIn.js","redux/store.js","pages/CoinPage.js","redux/actions/coinsActions.js","redux/actions/walletActions.js","components/nav_bar/styles.js","components/nav_bar/NavBar.js","components/body_holder/bodyStyles.js","components/walletPage/styles.js","pages/WalletPage.js","pages/AboutPage.js","App.js","reportWebVitals.js","index.js"],"names":["CoinCard","styled","div","button","initialState","coins","loading","initialWallet","USD","BTC","ETH","DOGE","BNB","combineReducers","state","action","type","payload","concat","loggedIn","wallet","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","CoinPage","useEffect","dispatch","a","axios","get","res","data","console","log","cryptoData","useSelector","BtcValue","getState","price_usd","map","coin","idx","Ul","key","id","Li","name","className","symbol","rank","Button","space","onClick","InputMasked","as_currency","StyledH1","Styled","H1","NavContainer","NavFlex","StyledAnchor","Section","Link","NavBar","to","StyledBody","WalletCard","WalletPage","currentWallet","AboutPage","aria-label","H2","H3","H4","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.300ff760.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const CoinCard = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 15rem auto auto;\r\nborder-bottom:  3px var(--color-sea-green) solid;\r\npadding: 1rem;\r\nbackground-color: var(--color-mint-green-25);\r\n`\r\n\r\nexport const Btn = styled.button`\r\n\r\n`","import { \r\n    GET_COINS_DATA,\r\n    GET_USD_DATA,\r\n    GET_BTC_DATA,\r\n    GET_ETH_DATA,\r\n    GET_DOGE_DATA,\r\n    GET_BNB_DATA,\r\n    CLEAN_STATE\r\n} from \"../types\";\r\n\r\n\r\nlet loadingState = false;\r\n\r\nexport const initialState = {\r\n    coins:[],\r\n    loading:loadingState,\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COINS_DATA:\r\n        return {\r\n            ...state,\r\n            coins: [state.coins, action.payload] \r\n        }\r\n        case GET_BTC_DATA: \r\n        return {\r\n            ...state,\r\n            coins: state.coins.concat(action.payload)\r\n        }\r\n        case GET_USD_DATA:\r\n            return {\r\n                ...state,\r\n                coins: state.coins.concat(action.payload),\r\n                loading: !loadingState\r\n            }\r\n        case GET_ETH_DATA:\r\n            return{\r\n                ...state,\r\n                coins: state.coins.concat(action.payload),\r\n                loading: !loadingState\r\n            }\r\n        \r\n        case GET_DOGE_DATA: \r\n            return {\r\n                ...state,\r\n                coins: state.coins.concat(action.payload),\r\n                loading: !loadingState\r\n            }\r\n        case GET_BNB_DATA: \r\n        return {\r\n            ...state,\r\n            coins: state.coins.concat(action.payload),\r\n            loading: !loadingState\r\n        }\r\n        case CLEAN_STATE: \r\n        return initialState\r\n        \r\n        default: return state\r\n    }\r\n}","import { \r\n    BUY_BTC,\r\n    SELL_BTC \r\n} from \"../types\";\r\n\r\n\r\nconst initialWallet = {\r\n    USD: 1000000,\r\n    BTC: null,\r\n    ETH: null,\r\n    DOGE: null,\r\n    BNB: null,\r\n}\r\n\r\nexport default function (state = initialWallet, action) {\r\n    \r\n    switch (action.type) {\r\n        case BUY_BTC:\r\n            return {\r\n                ...state, \r\n                BTC: initialWallet.USD / action.payload,\r\n                USD: 0\r\n            }\r\n        case SELL_BTC: \r\n        return {\r\n            ...state,\r\n            USD: initialWallet.BTC * action.payload\r\n        }\r\n            default: return state\r\n    }\r\n}\r\n\r\n\r\n// USD: id \"518\"\r\n// BTC: id \"90\"\r\n// ETH: id \"80\"\r\n// doge: id \"2\"\r\n// BNB: id \"2710\"","import { combineReducers } from \"redux\";\r\nimport coinReducers from \"./coinReducers\";\r\nimport loggedInReducer from \"./isLoggedIn\"\r\nimport walletReducer from \"./walletReducer\";\r\n\r\nexport default combineReducers({\r\n    coins: coinReducers,\r\n    loggedIn: loggedInReducer,\r\n    wallet: walletReducer\r\n})","export const GET_COINS_DATA = 'GET_COINS_DATA';\r\n\r\nexport const DATA_ERROR = 'DATA_ERROR';\r\nexport const CLEAN_STATE = 'CLEAN_STATE'\r\n\r\nexport const TOGGLE_LOGIN = 'TOGGLE_LOGIN';\r\nexport const IS_LOGGED_OUT = 'IS_LOGGED_OUT';\r\n\r\nexport const GET_USD_DATA = 'GET_USD_DATA';\r\nexport const BUY_USD = 'BUY_USD';\r\nexport const SELL_USD = 'SELL_USD';\r\n\r\nexport const GET_BTC_DATA = 'GET_BTC_DATA';\r\nexport const BUY_BTC = 'BUY_BTC';\r\nexport const SELL_BTC = 'SELL_BTC';\r\n\r\nexport const GET_ETH_DATA = 'GET_ETH_DATA';\r\nexport const BUY_ETH = 'BUY_ETH';\r\nexport const SELL_ETH = 'SELL_ETH';\r\n\r\nexport const GET_DOGE_DATA = 'GET_DOGE_DATA';\r\nexport const BUY_DOGE = 'BUY_DOGE';\r\nexport const SELL_DOGE = 'SELL_DOGE';\r\n\r\nexport const GET_BNB_DATA = 'GET_BNB_DATA';\r\nexport const BUY_BNB = 'BUY_BNB';\r\nexport const SELL_BNB = 'SELL_BNB';","import {\r\n    TOGGLE_LOGIN,\r\n} from '../types'\r\n\r\n\r\n\r\nexport default function (state = false, action) {\r\n    switch (action.type) {\r\n        case TOGGLE_LOGIN:\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\"\r\nimport { createStore, applyMiddleware } from \"redux\";;\r\n\r\n\r\nconst initialState= {\r\n\r\n};\r\n\r\nconst middleware = [thunk]\r\n\r\nexport const store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { CoinCard, } from '../components/coinPage/Styles';\r\nimport { getBnb, getBtc, cleanState, getDoge, getUsd, getEth, } from '../redux/actions/coinsActions';\r\nimport { useSelector } from 'react-redux';\r\nimport { store } from '../redux/store';\r\nimport { buyBtc } from '../redux/actions/walletActions';\r\nimport { Button, InputMasked, Li, Ul } from '@dnb/eufemia';\r\n\r\nexport const CoinPage = () => {\r\n    useEffect(() => {\r\n        store.dispatch(cleanState())\r\n        store.dispatch(getUsd())\r\n        store.dispatch(getBtc())\r\n        store.dispatch(getEth())\r\n        store.dispatch(getDoge())\r\n        store.dispatch(getBnb())\r\n    }, [])\r\n\r\n    const cryptoData = useSelector(state => state.coins.coins);\r\n\r\n\r\n    const BtcValue = () => {\r\n        store.dispatch(buyBtc())\r\n    }\r\n    if (cryptoData) {\r\n        console.log(cryptoData);\r\n        return (\r\n            <div>\r\n                {/* <Button onClick={\r\n                    BtcValue\r\n                }\r\n                >click</Button> */}\r\n                {\r\n                    cryptoData.map((coin, idx) =>\r\n                        <CoinCard>\r\n                            <Ul key={coin.id} >\r\n                                <Li key={coin.name} className=\"dnb-ul dnb-unstyled-list\" >{coin.name}</Li>\r\n                                <Li key={coin.symbol} className=\"dnb-ul dnb-unstyled-list\" >({coin.symbol})</Li>\r\n                                <Li key={coin.rank} className=\"dnb-ul dnb-unstyled-list\" >{coin.price_usd} </Li>\r\n                            </Ul>\r\n                            <div>\r\n                            <Button space=\"small\" onClick={BtcValue}>Buy</Button>\r\n                            <InputMasked\r\n                            as_currency=\"USD\" />\r\n                            </div>\r\n                            <div>\r\n                            <Button space=\"small\">Sell</Button>\r\n                            <InputMasked\r\n                            as_currency=\"USD\" />\r\n                            </div>\r\n                        </CoinCard>\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                loading\r\n            </div>\r\n        )\r\n    }\r\n}","import {\r\nGET_COINS_DATA,\r\nDATA_ERROR,\r\nGET_BTC_DATA,\r\nGET_ETH_DATA,\r\nGET_DOGE_DATA,\r\nGET_BNB_DATA,\r\nGET_USD_DATA,\r\nCLEAN_STATE,\r\n } from \"../types\";\r\nimport axios from 'axios';\r\nimport { initialState } from \"../reducers/coinReducers\";\r\n\r\nexport const getCoins = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('https://api.coinlore.net/api/tickers/')\r\n        dispatch({\r\n            type: GET_COINS_DATA,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch (e) {\r\n        dispatch({\r\n            type: DATA_ERROR,\r\n            payload: console.log(e)\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUsd = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('https://api.coinlore.net/api/ticker/?id=518')\r\n        dispatch({\r\n            type: GET_USD_DATA,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(e) {\r\n        dispatch({\r\n            type: DATA_ERROR,\r\n            payload: console.log(e)\r\n        })\r\n    }\r\n}\r\n\r\nexport const getBtc = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('https://api.coinlore.net/api/ticker/?id=90')\r\n        dispatch({\r\n            type: GET_BTC_DATA,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch (e) {\r\n        dispatch({\r\n            type: DATA_ERROR,\r\n            payload: console.log(e)\r\n        })\r\n    }\r\n}\r\n\r\nexport const getEth = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('https://api.coinlore.net/api/ticker/?id=80')\r\n        dispatch({\r\n            type: GET_ETH_DATA,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(e) {\r\n        dispatch({\r\n            type: DATA_ERROR,\r\n            payload: console.log(e)\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDoge = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('https://api.coinlore.net/api/ticker/?id=2')\r\n        dispatch({\r\n            type: GET_DOGE_DATA,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(e){\r\n        dispatch({\r\n            type: DATA_ERROR,\r\n            payload: console.log(e)\r\n        })\r\n    }\r\n}\r\n\r\nexport const getBnb = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('https://api.coinlore.net/api/ticker/?id=2710')\r\n        dispatch({\r\n            type: GET_BNB_DATA,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(e){\r\n        dispatch({\r\n            type:DATA_ERROR,\r\n            payload:console.log(e)\r\n        })\r\n    }\r\n}\r\n\r\nexport const cleanState = () => ({\r\n    type: CLEAN_STATE,\r\n    payload: initialState\r\n})","import { store } from \"../store\"\r\nimport { BUY_BTC, DATA_ERROR } from \"../types\"\r\n\r\nexport const buyBtc = () => async dispatch => {\r\n    try {\r\n        const res = await store.getState().coins.coins.data[0].price_usd\r\n        dispatch({\r\n            type: BUY_BTC,\r\n            payload: res\r\n        })\r\n    }\r\n    catch (e) {\r\n        dispatch({\r\n            type: DATA_ERROR,\r\n            payload: console.log(e)\r\n        })\r\n    }\r\n}\r\n\r\n// export const sellBtc => () => async dispatch => {\r\n//     try {\r\n//         const res = await store.getState.coins.c\r\n//     }\r\n// }","import Styled from \"styled-components\";\r\nimport { H1, Section } from '@dnb/eufemia';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledH1 = Styled(H1)`\r\ncolor: var(--color-mint-green);\r\npadding: 1rem !important;\r\n`;\r\n\r\nexport const NavContainer = Styled.div`\r\nbackground-color: var(--color-sea-green);\r\nwidth: 100%;\r\nheight: 100%;\r\n`;\r\n\r\nexport const NavFlex = Styled.div`\r\nmargin: auto;\r\ndisplay: flex;\r\njustify-content: space-evenly;\r\n`\r\n\r\nexport const StyledTabs = Styled.div`\r\ndisplay: flex;\r\njustify-content: space-evenly;\r\nwidth: 100%;\r\n`;\r\n\r\nexport const StyledSection = Styled(Section)`\r\nwidth: 100% !important;\r\n\r\n`\r\n\r\nexport const StyledAnchor = Styled(Link)`\r\ncolor: var(--color-mint-green);\r\ntext-decoration: none;\r\nfont-family: 'DNB', sans-serif;\r\nfont-size: 2rem;\r\nfont-weight: var(--font-weight-medium);\r\npadding: 0.5rem;\r\nmargin-top: 1rem;\r\nmargin-bottom: 1rem;\r\nborder: var(--color-mint-green) solid 3px;\r\nbox-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.2);\r\nborder-radius: 25px;\r\n\r\n&:hover {\r\n    transform: scale(1.1);\r\n}\r\n`\r\n\r\n\r\nexport default null;","import React from 'react';\r\nimport { NavContainer, StyledAnchor, NavFlex, StyledH1  } from './styles';\r\nimport { H1 } from '@dnb/eufemia';\r\nexport const NavBar = () => {\r\n    return (\r\n            <NavContainer>\r\n                <StyledH1\r\n                 >Fantasy Crypto</StyledH1>\r\n<NavFlex>\r\n                <StyledAnchor \r\n                 to=\"/about\"\r\n                 >About</StyledAnchor>\r\n                <StyledAnchor \r\n                \r\n                 to=\"/coins\"\r\n                 >Coins</StyledAnchor>\r\n                <StyledAnchor \r\n                 to=\"/wallet\"\r\n                 >Wallet</StyledAnchor>\r\n                 </NavFlex>\r\n            </NavContainer>\r\n    )\r\n}\r\n// eslint-disable-next-line\r\nconst tabData = [\r\n    { title: 'wallet', key: '/wallet' },\r\n    { title: 'about', key: '/about' },\r\n    { title: 'Coins', key: '/coins' },\r\n]","import styled from \"styled-components\";\r\n\r\nexport const StyledBody = styled.div`\r\nwidth: 60%;\r\nborder: #007272 solid 3px;\r\nborder-radius: 25px;\r\nmargin: auto;\r\nmargin-top: 10rem;\r\ntext-align: center;\r\noverflow: hidden;\r\n`","import styled from 'styled-components'\r\n\r\nexport const WalletCard = styled.div`\r\nborder-bottom:  3px var(--color-sea-green) solid;\r\npadding: 1rem;\r\nbackground-color: var(--color-mint-green-25);\r\n`","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { WalletCard } from '../components/walletPage/styles';\r\n\r\nexport const WalletPage = () => {\r\n    const currentWallet = useSelector(state => state.wallet)\r\n    if (currentWallet) \r\n    {return(\r\n        <div>\r\n    <WalletCard> <p>USD:${currentWallet.USD}</p> </WalletCard>\r\n    <WalletCard> <p>BTC: {currentWallet.BTC} coins</p> </WalletCard>\r\n    <WalletCard> <p>ETH: {currentWallet.ETH} coins</p> </WalletCard>\r\n    <WalletCard> <p>DOGE:{currentWallet.DOGE} coins</p> </WalletCard>\r\n    <WalletCard> <p>BNB: {currentWallet.BNB} coins</p> </WalletCard>\r\n       </div>\r\n)}}","import React from \"react\";\r\nimport { Section, Ul, Li, H2, H3, H4 } from \"@dnb/eufemia\";\r\nimport { WalletCard } from '../components/walletPage/styles.js'\r\n\r\nexport const AboutPage = () => (\r\n    <Section aria-label=\"About Page\">\r\n        <WalletCard>\r\n            <H2>About</H2>\r\n            <p>Fantasy crypto is an app that lets you buy and sell four different crypto-coins for fun using fake monopoly money.\r\n                <br></br>\r\n                The app is under development and might not work as intended yet.\r\n            </p>\r\n            <p>The purpose with this app is to learn more about:\r\n                <Ul>\r\n                    <Li>Api's</Li>\r\n                    <Li>Redux</Li>\r\n                    <Li>React Router</Li>\r\n                    <Li>Dnb's css eufemia liberary</Li>\r\n                </Ul>\r\n            </p>\r\n        </WalletCard>\r\n        <WalletCard>\r\n<H2>Log</H2>\r\n<br></br>\r\n</WalletCard>\r\n<WalletCard>\r\n<Ul>\r\n<H3>ToDo</H3>\r\n<Li>[ ] make figma design for wallet page </Li>\r\n<Li>[ ] make every other coincard have different background color  </Li>\r\n<Li>[ ] render coins in spesific order instead of random </Li>\r\n<Li>[ ] make the wallet reducer handle buy/sell orders for selected coins </Li>\r\n<Li>[ ] make the buttons handle buy sell orders </Li>\r\n<Li>[ ] learn about caching, see if i can make it remember state for wallet </Li>\r\n<br></br>\r\n</Ul>\r\n</WalletCard>\r\n\r\n<WalletCard>\r\n<Ul>\r\n<H3>Finished</H3>\r\n<H4>03.01.2022</H4>\r\n<Li>[√] fixed git error </Li>\r\n<Li>[√] make github host project as website </Li>\r\n<Li>[√] removed a bunch of console errors</Li>\r\n<br></br>\r\n<H4>02.01.2022</H4>\r\n<Li>[x] update dependecies for security (failed, eufemia imports would not work anymore) </Li>\r\n<Li>[√] make figma design for trade page </Li>\r\n<Li>[√] work on styling for coins/trade page </Li>\r\n<br></br>\r\n<H4>29.12.21</H4>\r\n<Li>[√] Remove unused \"coins\" from coins page. </Li>\r\n<Li>[√] coins render based on coin-spesific api calls through redux </Li>\r\n<Li>[√] Add dummy buttons with buy / sell for each coin. </Li>\r\n<br></br>\r\n\r\n<H4>28.12.21</H4>\r\n<Li>[√] Start work on reducer that handles wallet information. </Li>\r\n<Li>[√] Make the reducer do a trade, and update wallet info </Li>\r\n<Li>[√] make the api call once and not getting two \"undefined\" </Li>\r\n<Li>[√] get redux state to render data instead of normal api call.</Li>\r\n<br></br>\r\n\r\n<H4>27.12.21</H4>\r\n<Li>[√]  Learned a little about store.getState() method </Li>\r\n<br></br>\r\n\r\n<H4>23.12.21</H4>\r\n<Li>[√] console.log data about coins from the redux call </Li>\r\n<Li>[√] Make a reducer setup that handles if the user is loggedIn or not. </Li>\r\n<br></br>\r\n\r\n<H4>13.12.21</H4>\r\n<Li>[√] Console log data </Li>\r\n<Li>[√] Set up pathing </Li>\r\n<br></br>\r\n</Ul>\r\n</WalletCard>\r\n    </Section>\r\n)","import React from 'react';\nimport './App.css';\nimport { CoinPage } from './pages/CoinPage';\nimport { NavBar } from './components/nav_bar/NavBar';\nimport { StyledBody } from './components/body_holder/bodyStyles'\nimport { WalletPage } from './pages/WalletPage';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport { AboutPage } from './pages/AboutPage';\nimport { H1 } from '@dnb/eufemia';\n\n\n\nfunction App() {\n  return (\n    \n    <StyledBody>\n    <BrowserRouter>\n      <NavBar />\n    <Routes>\n      <Route path=\"/wallet\" element={<WalletPage/>}/>\n      <Route path=\"/about\" element={<AboutPage/>}/>\n      <Route path=\"/coins\" element={<CoinPage/>}/>\n      <Route path=\"*\" element={<AboutPage/>}/>\n    </Routes>\n    </BrowserRouter>\n    </StyledBody>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@dnb/eufemia/style/basis';\nimport '@dnb/eufemia/style/components';\nimport '@dnb/eufemia/style/themes/ui';\nimport { Provider } from 'react-redux'\nimport {store} from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}